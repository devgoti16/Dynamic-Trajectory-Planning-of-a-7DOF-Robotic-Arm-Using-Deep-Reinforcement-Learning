<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->  
  <arg name="kinova_robotType" default="j2s7s300"/>
  <arg name="kinova_robotName" default="$(arg kinova_robotType)"/>
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="use_trajectory_controller" default="false"/>
  <arg name="is7dof" default="false"/>
  <arg name="rqt" default="false"/>
  <arg name="has2finger" default="false"/>
  <arg name="description_name" default="robot_description"/> <!-- allows remapping of robot_description into a namespace -->

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find kinova_gazebo)/worlds/jaco.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find kinova_description)/urdf/$(arg kinova_robotType)_standalone.xacro'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <!-- For the 6DOF -->
  <group unless="$(arg is7dof)">
    <!-- For 3 fingers -->
    <node unless="$(arg has2finger)" name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
      args="-urdf -model $(arg kinova_robotName) -param robot_description
          -J $(arg kinova_robotType)_joint_1 0.0
          -J $(arg kinova_robotType)_joint_2 2.9
          -J $(arg kinova_robotType)_joint_3 1.3
          -J $(arg kinova_robotType)_joint_4 -2.07
          -J $(arg kinova_robotType)_joint_5 1.4
          -J $(arg kinova_robotType)_joint_6 0.0
          -J $(arg kinova_robotType)_joint_finger_1 1.0
          -J $(arg kinova_robotType)_joint_finger_2 1.0
          -J $(arg kinova_robotType)_joint_finger_3 1.0" />
    <!-- For 2 fingers -->
    <node if="$(arg has2finger)" name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
      args="-urdf -model $(arg kinova_robotName) -param robot_description
          -J $(arg kinova_robotType)_joint_1 0.0
          -J $(arg kinova_robotType)_joint_2 2.9
          -J $(arg kinova_robotType)_joint_3 1.3
          -J $(arg kinova_robotType)_joint_4 -2.07
          -J $(arg kinova_robotType)_joint_5 1.4
          -J $(arg kinova_robotType)_joint_6 0.0
          -J $(arg kinova_robotType)_joint_finger_1 1.0
          -J $(arg kinova_robotType)_joint_finger_2 1.0" />
  </group>

  <!-- For the 7DOF -->
  <group if="$(arg is7dof)">
    <!-- For 3 fingers -->
    <node unless="$(arg has2finger)" name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model $(arg kinova_robotName) -param robot_description
        -J $(arg kinova_robotType)_joint_1 0.0
        -J $(arg kinova_robotType)_joint_2 2.9
        -J $(arg kinova_robotType)_joint_3 0.0
        -J $(arg kinova_robotType)_joint_4 1.3
        -J $(arg kinova_robotType)_joint_5 -2.07
        -J $(arg kinova_robotType)_joint_6 1.4
        -J $(arg kinova_robotType)_joint_7 0.0
        -J $(arg kinova_robotType)_joint_finger_1 1.0
        -J $(arg kinova_robotType)_joint_finger_2 1.0
        -J $(arg kinova_robotType)_joint_finger_3 1.0" />
    <!-- For 2 fingers -->
    <node if="$(arg has2finger)" name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model $(arg kinova_robotName) -param robot_description
        -J $(arg kinova_robotType)_joint_1 0.0
        -J $(arg kinova_robotType)_joint_2 2.9
        -J $(arg kinova_robotType)_joint_3 0.0
        -J $(arg kinova_robotType)_joint_4 1.3
        -J $(arg kinova_robotType)_joint_5 -2.07
        -J $(arg kinova_robotType)_joint_6 1.4
        -J $(arg kinova_robotType)_joint_7 0.0
        -J $(arg kinova_robotType)_joint_finger_1 1.0
        -J $(arg kinova_robotType)_joint_finger_2 1.0" />
  </group>

  <!-- ros_control launch file -->
  <include file="$(find kinova_control)/launch/kinova_control.launch">
    <arg name="kinova_robotName" value="$(arg kinova_robotName)"/>
    <arg name="kinova_robotType" value="$(arg kinova_robotType)"/>
    <arg name="use_trajectory_controller" value="$(arg use_trajectory_controller)"/>
    <arg name="is7dof" value="$(arg is7dof)"/>
    <arg name="has2finger" value="$(arg has2finger)"/>
    <arg name="description_name" value="$(arg description_name)"/>
  </include>

  <!-- rqt launch file -->
  <include if="$(arg rqt)" file="$(find kinova_control)/launch/kinova_rqt.launch">
    <arg name="kinova_robotType" value="$(arg kinova_robotType)"/>
  </include> 
</launch>

